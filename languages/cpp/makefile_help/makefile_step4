##############################################################################
# Compiler specifications
# These match the variable names given in /usr/share/lib/make/make.rules
# so that make's generic rules work to compile our files.
# gmake prefers CXX and CXXFLAGS for c++ programs
##############################################################################
# Which compiler should be used

#CC -- the c compiler to use
#CXX -- the c++ compiler to use
#LD -- the linker to use
#CFLAGS -- compilation flag for c source files
#CXXFLAGS -- compilation flags for c++ source files
#CPPFLAGS -- flags for the c-preprocessor (typically include file paths and symbols defined on the command line), used by c and c++
#LDFLAGS -- linker flags
#LDLIBS -- libraries to link

CXX = g++
CC = $(CXX)
RM = rm -rf



# -Wall This enables all the warnings about constructions that some users consider questionable, and that are easy to avoid
DEBUG_LEVEL		=-g 
EXTRA_CCFLAGS	=-Wall
CXXFLAGS 		=$(DEBUG_LEVEL) $(EXTRA_CCFLAGS) 
CCFLAGS         =$(CXXFLAGS) 


LDFLAGS			=-g 
LDLIBS			=-pthread

all: main

# g++ -o <file> Place the output into <file>
main: main.o
	$(CC)  -o  test  $(LDFLAGS) $(LDLIBS) main.o   

 # g++ -c <file> Compile and assemble, but do not link 
main.o:main.cpp
	$(CC) $(CCFLAGS) -c main.cpp  

clean:
	$(RM) *.o
	$(RM) test